name: Terraform Apply and Build/Push Docker Image

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: my-terraform-image
  IMAGE_TAG: latest
  ECR_REPO_NAME: terraform-pipeline
  AWS_ACCOUNT_ID: 739275466503
  ECR_REPO_URI: 739275466503.dkr.ecr.us-east-1.amazonaws.com/terraform-pipeline
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Terraform Init & Validate
        working-directory: ./Terraform
        run: |
          terraform init
          terraform validate

      - name: Terraform Plan
        working-directory: ./Terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./Terraform
        run: terraform apply -auto-approve tfplan

  build-push-ecr:
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        working-directory: ./app
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Tag Docker Image for ECR
        run: docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.ECR_REPO_URI }}:${{ env.IMAGE_TAG }}

      - name: Push Docker Image to ECR
        run: docker push ${{ env.ECR_REPO_URI }}:${{ env.IMAGE_TAG }}

  push-dockerhub:
    runs-on: ubuntu-latest
    needs: build-push-ecr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Tag Docker Image for Docker Hub
        working-directory: ./app
        run: docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Push Docker Image to Docker Hub
        working-directory: ./app
        run: docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
